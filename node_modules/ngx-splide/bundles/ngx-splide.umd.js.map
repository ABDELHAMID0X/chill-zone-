{"version":3,"file":"ngx-splide.umd.js","sources":["../../../projects/ngx-splide/src/lib/ngx-splide-slide.component.ts","../../../projects/ngx-splide/src/lib/ngx-splide.component.ts","../../../projects/ngx-splide/src/lib/ngx-splide.component.html","../../../projects/ngx-splide/src/lib/ngx-splide.module.ts","../../../projects/ngx-splide/src/public-api.ts","../../../projects/ngx-splide/src/ngx-splide.ts"],"sourcesContent":["import {Component, TemplateRef, ViewChild} from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: 'splide-slide',\r\n    template: '<ng-template #slideContent><ng-content></ng-content></ng-template>'\r\n})\r\nexport class NgxSplideSlideComponent\r\n{\r\n    @ViewChild('slideContent')\r\n    public slideContent: TemplateRef<any>;\r\n}\r\n","import { isPlatformBrowser } from '@angular/common';\r\nimport {\r\n    AfterViewInit,\r\n    Component,\r\n    ContentChildren,\r\n    ElementRef,\r\n    Input, OnChanges, OnDestroy, Output,\r\n    QueryList, SimpleChanges,\r\n    ViewChild, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef, Inject, PLATFORM_ID\r\n} from '@angular/core';\r\nimport { NgxSplideSlideComponent } from './ngx-splide-slide.component';\r\n\r\ndeclare var Splide: any;\r\n\r\n@Component({\r\n    selector: 'splide',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    templateUrl: './ngx-splide.component.html'\r\n})\r\nexport class NgxSplideComponent implements AfterViewInit, OnChanges, OnDestroy\r\n{\r\n    @Input() selectedSlideIndex: number;\r\n    @Output() selectedSlideIndexChange = new EventEmitter<number>();\r\n\r\n    @Input() options: any = {};\r\n    @Input() containerClass: string = '';\r\n    @Input() syncWith: NgxSplideComponent;\r\n\r\n    @Output() onInit = new EventEmitter<any>();\r\n    @Output() onSplideEvent = new EventEmitter<any>();\r\n\r\n    @Output() onMounted = new EventEmitter();\r\n    @Output() onUpdated = new EventEmitter();\r\n    @Output() onMove = new EventEmitter();\r\n    @Output() onMoved = new EventEmitter();\r\n    @Output() onDrag = new EventEmitter();\r\n    @Output() onDragged = new EventEmitter();\r\n    @Output() onVisible = new EventEmitter();\r\n    @Output() onHidden = new EventEmitter();\r\n    @Output() onActive = new EventEmitter();\r\n    @Output() onInactive = new EventEmitter();\r\n    @Output() onClick = new EventEmitter();\r\n    @Output() onArrowsMounted = new EventEmitter();\r\n    @Output() onArrowsUpdated = new EventEmitter();\r\n    @Output() onPaginationMounted = new EventEmitter();\r\n    @Output() onPaginationUpdated = new EventEmitter();\r\n    @Output() onNavigationMounted = new EventEmitter();\r\n    @Output() onAutoplayPlay = new EventEmitter();\r\n    @Output() onAutoplayPause = new EventEmitter();\r\n    @Output() onAutoplayPlaying = new EventEmitter();\r\n    @Output() onLazyloadLoaded = new EventEmitter();\r\n\r\n    @ContentChildren(NgxSplideSlideComponent) public slides: QueryList<NgxSplideSlideComponent>;\r\n\r\n    @ViewChild('splideElement') splideElement: ElementRef;\r\n    protected splide;\r\n\r\n    constructor(private cdr: ChangeDetectorRef, @Inject(PLATFORM_ID) private platformId: any) { }\r\n\r\n    ngAfterViewInit(): void\r\n    {\r\n        if (!isPlatformBrowser(this.platformId)) {\r\n            return;\r\n        }\r\n\r\n        this.splide = new Splide(this.splideElement.nativeElement, this.options);\r\n\r\n        if (this.syncWith) {\r\n            this.splide.sync(this.syncWith.getSplideInstance());\r\n        }\r\n\r\n        this.onInit.emit(this.splide);\r\n        this.mountSplideInstance();\r\n\r\n        const slidesSubscription = this.slides.changes\r\n            .subscribe((list: QueryList<NgxSplideSlideComponent>) => {\r\n                this.cdr.detectChanges();\r\n\r\n                setTimeout(() => {\r\n                    this.remountSplideInstance();\r\n                });\r\n            })\r\n        ;\r\n\r\n        this.cdr.detectChanges();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges)\r\n    {\r\n        if (!this.splide) {\r\n            return;\r\n        }\r\n\r\n        if (changes['selectedSlideIndex']) {\r\n            const currentIndex = changes['selectedSlideIndex'].currentValue;\r\n            if (currentIndex !== this.splide.index) {\r\n                this.splide.go(currentIndex);\r\n            }\r\n        }\r\n\r\n        if (changes['options']) {\r\n            this.splide.options = changes['options'].currentValue;\r\n        }\r\n    }\r\n\r\n    addEventListeners()\r\n    {\r\n        this.splide\r\n            .on('mounted', ( ...args ) => {\r\n                this.onMounted.emit(args);\r\n                this.onSplideEvent.emit({\r\n                    name: 'mounted',\r\n                    args\r\n                });\r\n            })\r\n            .on('updated', ( ...args ) => {\r\n                this.onUpdated.emit(args);\r\n                this.onSplideEvent.emit({\r\n                    name: 'updated',\r\n                    args\r\n                });\r\n            })\r\n            .on('move', (newIndex, oldIndex, destIndex) => {\r\n                this.selectedSlideIndexChange.emit(newIndex);\r\n                this.onMove.emit([ newIndex, oldIndex, destIndex ]);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'move',\r\n                    args: [ newIndex, oldIndex, destIndex ]\r\n                });\r\n            })\r\n            .on('moved', ( ...args ) => {\r\n                this.onMoved.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'moved',\r\n                    args\r\n                });\r\n            })\r\n            .on('drag', ( ...args ) => {\r\n                this.onDrag.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'drag',\r\n                    args\r\n                });\r\n            })\r\n            .on('dragged', ( ...args ) => {\r\n                this.onDragged.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'dragged',\r\n                    args\r\n                });\r\n            })\r\n            .on('visible', ( ...args ) => {\r\n                this.onVisible.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'visible',\r\n                    args\r\n                });\r\n            })\r\n            .on('hidden', ( ...args ) => {\r\n                this.onHidden.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'hidden',\r\n                    args\r\n                });\r\n            })\r\n            .on('active', ( ...args ) => {\r\n                this.onActive.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'active',\r\n                    args\r\n                });\r\n            })\r\n            .on('inactive', ( ...args ) => {\r\n                this.onInactive.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'inactive',\r\n                    args\r\n                });\r\n            })\r\n            .on('click', ( ...args ) => {\r\n                this.onClick.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'click',\r\n                    args\r\n                });\r\n            })\r\n            .on('arrows:mounted', ( ...args ) => {\r\n                this.onArrowsMounted.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'arrows:mounted',\r\n                    args\r\n                });\r\n            })\r\n            .on('arrows:updated', ( ...args ) => {\r\n                this.onArrowsUpdated.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'arrows:updated',\r\n                    args\r\n                });\r\n            })\r\n            .on('pagination:mounted', ( ...args ) => {\r\n                this.onPaginationMounted.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'pagination:mounted',\r\n                    args\r\n                });\r\n            })\r\n            .on('pagination:updated', ( ...args ) => {\r\n                this.onPaginationUpdated.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'pagination:updated',\r\n                    args\r\n                });\r\n            })\r\n            .on('navigation:mounted', ( ...args ) => {\r\n                this.onNavigationMounted.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'navigation:mounted',\r\n                    args\r\n                });\r\n            })\r\n            .on('autoplay:play', ( ...args ) => {\r\n                this.onAutoplayPlay.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'autoplay:play',\r\n                    args\r\n                });\r\n            })\r\n            .on('autoplay:pause', ( ...args ) => {\r\n                this.onAutoplayPause.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'autoplay:pause',\r\n                    args\r\n                });\r\n            })\r\n            .on('autoplay:playing', ( ...args ) => {\r\n                this.onAutoplayPlaying.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'autoplay:playing',\r\n                    args\r\n                });\r\n            })\r\n            .on('lazyload:loaded', ( ...args ) => {\r\n                this.onLazyloadLoaded.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'lazyload:loaded',\r\n                    args\r\n                });\r\n            })\r\n        ;\r\n    }\r\n\r\n    getSplideInstance()\r\n    {\r\n        return this.splide;\r\n    }\r\n\r\n    mountSplideInstance()\r\n    {\r\n        this.splide.mount();\r\n        this.addEventListeners();\r\n    }\r\n\r\n    remountSplideInstance()\r\n    {\r\n        console.log('remountSplideInstance');\r\n        this.splide.destroy();\r\n        this.mountSplideInstance();\r\n    }\r\n\r\n    ngOnDestroy()\r\n    {\r\n        if (this.splide) {\r\n            this.splide.destroy(true);\r\n        }\r\n    }\r\n}\r\n","<div #splideElement class=\"splide\" [ngClass]=\"containerClass\">\r\n    <div class=\"splide__track\">\r\n        <div class=\"splide__list\">\r\n            <div class=\"splide__slide\" *ngFor=\"let slide of slides;\">\r\n                <ng-template *ngIf=\"slide.slideContent\" [ngTemplateOutlet]=\"slide.slideContent\"></ng-template>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxSplideComponent } from './ngx-splide.component';\nimport { NgxSplideSlideComponent } from './ngx-splide-slide.component';\n\n@NgModule({\n    declarations: [ NgxSplideComponent, NgxSplideSlideComponent ],\n    imports: [ CommonModule ],\n    exports: [ NgxSplideComponent, NgxSplideSlideComponent ]\n})\nexport class NgxSplideModule {}\n","/*\n * Public API Surface of ngx-splide\n */\n\nexport * from './lib/ngx-splide-slide.component';\nexport * from './lib/ngx-splide.component';\nexport * from './lib/ngx-splide.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0","Component","ViewChild","EventEmitter","isPlatformBrowser","PLATFORM_ID","i1","ChangeDetectionStrategy","Inject","Input","Output","ContentChildren","CommonModule","NgModule"],"mappings":"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"}