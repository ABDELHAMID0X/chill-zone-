{"version":3,"file":"ngx-splide.js","sources":["../../../projects/ngx-splide/src/lib/ngx-splide-slide.component.ts","../../../projects/ngx-splide/src/lib/ngx-splide.component.ts","../../../projects/ngx-splide/src/lib/ngx-splide.component.html","../../../projects/ngx-splide/src/lib/ngx-splide.module.ts","../../../projects/ngx-splide/src/public-api.ts","../../../projects/ngx-splide/src/ngx-splide.ts"],"sourcesContent":["import {Component, TemplateRef, ViewChild} from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: 'splide-slide',\r\n    template: '<ng-template #slideContent><ng-content></ng-content></ng-template>'\r\n})\r\nexport class NgxSplideSlideComponent\r\n{\r\n    @ViewChild('slideContent')\r\n    public slideContent: TemplateRef<any>;\r\n}\r\n","import { isPlatformBrowser } from '@angular/common';\r\nimport {\r\n    AfterViewInit,\r\n    Component,\r\n    ContentChildren,\r\n    ElementRef,\r\n    Input, OnChanges, OnDestroy, Output,\r\n    QueryList, SimpleChanges,\r\n    ViewChild, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef, Inject, PLATFORM_ID\r\n} from '@angular/core';\r\nimport { NgxSplideSlideComponent } from './ngx-splide-slide.component';\r\n\r\ndeclare var Splide: any;\r\n\r\n@Component({\r\n    selector: 'splide',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    templateUrl: './ngx-splide.component.html'\r\n})\r\nexport class NgxSplideComponent implements AfterViewInit, OnChanges, OnDestroy\r\n{\r\n    @Input() selectedSlideIndex: number;\r\n    @Output() selectedSlideIndexChange = new EventEmitter<number>();\r\n\r\n    @Input() options: any = {};\r\n    @Input() containerClass: string = '';\r\n    @Input() syncWith: NgxSplideComponent;\r\n\r\n    @Output() onInit = new EventEmitter<any>();\r\n    @Output() onSplideEvent = new EventEmitter<any>();\r\n\r\n    @Output() onMounted = new EventEmitter();\r\n    @Output() onUpdated = new EventEmitter();\r\n    @Output() onMove = new EventEmitter();\r\n    @Output() onMoved = new EventEmitter();\r\n    @Output() onDrag = new EventEmitter();\r\n    @Output() onDragged = new EventEmitter();\r\n    @Output() onVisible = new EventEmitter();\r\n    @Output() onHidden = new EventEmitter();\r\n    @Output() onActive = new EventEmitter();\r\n    @Output() onInactive = new EventEmitter();\r\n    @Output() onClick = new EventEmitter();\r\n    @Output() onArrowsMounted = new EventEmitter();\r\n    @Output() onArrowsUpdated = new EventEmitter();\r\n    @Output() onPaginationMounted = new EventEmitter();\r\n    @Output() onPaginationUpdated = new EventEmitter();\r\n    @Output() onNavigationMounted = new EventEmitter();\r\n    @Output() onAutoplayPlay = new EventEmitter();\r\n    @Output() onAutoplayPause = new EventEmitter();\r\n    @Output() onAutoplayPlaying = new EventEmitter();\r\n    @Output() onLazyloadLoaded = new EventEmitter();\r\n\r\n    @ContentChildren(NgxSplideSlideComponent) public slides: QueryList<NgxSplideSlideComponent>;\r\n\r\n    @ViewChild('splideElement') splideElement: ElementRef;\r\n    protected splide;\r\n\r\n    constructor(private cdr: ChangeDetectorRef, @Inject(PLATFORM_ID) private platformId: any) { }\r\n\r\n    ngAfterViewInit(): void\r\n    {\r\n        if (!isPlatformBrowser(this.platformId)) {\r\n            return;\r\n        }\r\n\r\n        this.splide = new Splide(this.splideElement.nativeElement, this.options);\r\n\r\n        if (this.syncWith) {\r\n            this.splide.sync(this.syncWith.getSplideInstance());\r\n        }\r\n\r\n        this.onInit.emit(this.splide);\r\n        this.mountSplideInstance();\r\n\r\n        const slidesSubscription = this.slides.changes\r\n            .subscribe((list: QueryList<NgxSplideSlideComponent>) => {\r\n                this.cdr.detectChanges();\r\n\r\n                setTimeout(() => {\r\n                    this.remountSplideInstance();\r\n                });\r\n            })\r\n        ;\r\n\r\n        this.cdr.detectChanges();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges)\r\n    {\r\n        if (!this.splide) {\r\n            return;\r\n        }\r\n\r\n        if (changes['selectedSlideIndex']) {\r\n            const currentIndex = changes['selectedSlideIndex'].currentValue;\r\n            if (currentIndex !== this.splide.index) {\r\n                this.splide.go(currentIndex);\r\n            }\r\n        }\r\n\r\n        if (changes['options']) {\r\n            this.splide.options = changes['options'].currentValue;\r\n        }\r\n    }\r\n\r\n    addEventListeners()\r\n    {\r\n        this.splide\r\n            .on('mounted', ( ...args ) => {\r\n                this.onMounted.emit(args);\r\n                this.onSplideEvent.emit({\r\n                    name: 'mounted',\r\n                    args\r\n                });\r\n            })\r\n            .on('updated', ( ...args ) => {\r\n                this.onUpdated.emit(args);\r\n                this.onSplideEvent.emit({\r\n                    name: 'updated',\r\n                    args\r\n                });\r\n            })\r\n            .on('move', (newIndex, oldIndex, destIndex) => {\r\n                this.selectedSlideIndexChange.emit(newIndex);\r\n                this.onMove.emit([ newIndex, oldIndex, destIndex ]);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'move',\r\n                    args: [ newIndex, oldIndex, destIndex ]\r\n                });\r\n            })\r\n            .on('moved', ( ...args ) => {\r\n                this.onMoved.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'moved',\r\n                    args\r\n                });\r\n            })\r\n            .on('drag', ( ...args ) => {\r\n                this.onDrag.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'drag',\r\n                    args\r\n                });\r\n            })\r\n            .on('dragged', ( ...args ) => {\r\n                this.onDragged.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'dragged',\r\n                    args\r\n                });\r\n            })\r\n            .on('visible', ( ...args ) => {\r\n                this.onVisible.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'visible',\r\n                    args\r\n                });\r\n            })\r\n            .on('hidden', ( ...args ) => {\r\n                this.onHidden.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'hidden',\r\n                    args\r\n                });\r\n            })\r\n            .on('active', ( ...args ) => {\r\n                this.onActive.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'active',\r\n                    args\r\n                });\r\n            })\r\n            .on('inactive', ( ...args ) => {\r\n                this.onInactive.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'inactive',\r\n                    args\r\n                });\r\n            })\r\n            .on('click', ( ...args ) => {\r\n                this.onClick.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'click',\r\n                    args\r\n                });\r\n            })\r\n            .on('arrows:mounted', ( ...args ) => {\r\n                this.onArrowsMounted.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'arrows:mounted',\r\n                    args\r\n                });\r\n            })\r\n            .on('arrows:updated', ( ...args ) => {\r\n                this.onArrowsUpdated.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'arrows:updated',\r\n                    args\r\n                });\r\n            })\r\n            .on('pagination:mounted', ( ...args ) => {\r\n                this.onPaginationMounted.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'pagination:mounted',\r\n                    args\r\n                });\r\n            })\r\n            .on('pagination:updated', ( ...args ) => {\r\n                this.onPaginationUpdated.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'pagination:updated',\r\n                    args\r\n                });\r\n            })\r\n            .on('navigation:mounted', ( ...args ) => {\r\n                this.onNavigationMounted.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'navigation:mounted',\r\n                    args\r\n                });\r\n            })\r\n            .on('autoplay:play', ( ...args ) => {\r\n                this.onAutoplayPlay.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'autoplay:play',\r\n                    args\r\n                });\r\n            })\r\n            .on('autoplay:pause', ( ...args ) => {\r\n                this.onAutoplayPause.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'autoplay:pause',\r\n                    args\r\n                });\r\n            })\r\n            .on('autoplay:playing', ( ...args ) => {\r\n                this.onAutoplayPlaying.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'autoplay:playing',\r\n                    args\r\n                });\r\n            })\r\n            .on('lazyload:loaded', ( ...args ) => {\r\n                this.onLazyloadLoaded.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'lazyload:loaded',\r\n                    args\r\n                });\r\n            })\r\n        ;\r\n    }\r\n\r\n    getSplideInstance()\r\n    {\r\n        return this.splide;\r\n    }\r\n\r\n    mountSplideInstance()\r\n    {\r\n        this.splide.mount();\r\n        this.addEventListeners();\r\n    }\r\n\r\n    remountSplideInstance()\r\n    {\r\n        console.log('remountSplideInstance');\r\n        this.splide.destroy();\r\n        this.mountSplideInstance();\r\n    }\r\n\r\n    ngOnDestroy()\r\n    {\r\n        if (this.splide) {\r\n            this.splide.destroy(true);\r\n        }\r\n    }\r\n}\r\n","<div #splideElement class=\"splide\" [ngClass]=\"containerClass\">\r\n    <div class=\"splide__track\">\r\n        <div class=\"splide__list\">\r\n            <div class=\"splide__slide\" *ngFor=\"let slide of slides;\">\r\n                <ng-template *ngIf=\"slide.slideContent\" [ngTemplateOutlet]=\"slide.slideContent\"></ng-template>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxSplideComponent } from './ngx-splide.component';\nimport { NgxSplideSlideComponent } from './ngx-splide-slide.component';\n\n@NgModule({\n    declarations: [ NgxSplideComponent, NgxSplideSlideComponent ],\n    imports: [ CommonModule ],\n    exports: [ NgxSplideComponent, NgxSplideSlideComponent ]\n})\nexport class NgxSplideModule {}\n","/*\n * Public API Surface of ngx-splide\n */\n\nexport * from './lib/ngx-splide-slide.component';\nexport * from './lib/ngx-splide.component';\nexport * from './lib/ngx-splide.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}